import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Test {

	public static void main(String[] args) {
		
		Integer [] arr = {2,4,6,7,10,12,41,55,100,3,26,75,4};//이게 ls랑 같아요
		List<Integer> ls = new ArrayList<>(Arrays.asList(arr));
		
		System.out.println(ls.get(0)); // 2
		ls.set(0, 3); // 0번째 인덱스 3으로 바뀜
		System.out.println(ls.get(0)); // 0번째 인덱스 3
		int abc = ls.set(0, 5); // 0번째 인덱스 제거하고 5로 바꿀꺼야
		System.out.println(abc); //이건 ? 기존 3
		System.out.println(ls.get(0)); // 지나서는 5
		 int r = ls.remove(0);
		 System.out.println(r); //5 
		 System.out.println(ls.get(0)); //4
		
//		set을 하면 인덱스값에 기존의 값이 제거되고 새로운 리터럴이 들어가는데
//		근데 set함수가 기존의 값을 return 해주면
//		내 기존 값을 보존하면서 수정할 방법이 생기기 때문에
//		기존값을 들고있다 ?.
//				
//		의도 : 너가 뭘 할지는 모르겠지만 set으로 값을 바꾸고 원래 값에 접근할 수 없으니
//		다시 생각해봐
	}
}
